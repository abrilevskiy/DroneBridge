[AIR]
# This file is used configure DroneBridge on the UAV side
# ---------------------------------------------------------------

# [m|w] for monitor mode (long range) or wifi mode (short range - not supported yet)
mode=m

# choose a random number. Allowed numbers: 0-255
# has to be the same on drone and groundstation!
communication_id=200

# [auto|manual] Use "auto" if only one wifi stick is connected! We will choose that one
interface_selection=auto

# If interface_selection=manual
# Interfaces which DroneBridge modules use to communicate with groundstation (manual mode)
interface_control=18a6f716a511
interface_tel=18a6f716a511
interface_video=18a6f716a511
interface_comm=18a6f716a511

# enable "Y" or disable "N" DroneBridge modules
en_tel=Y
# NOT USED
en_video=N
en_comm=Y
en_control=Y
en_plugin=Y

# Interface on which we want to communicate with GoPro (no monitor mode!) (unused)
interface_gopro=intwlan0

# serial interface used by telemetry module
# set to /dev/serial1 if you connect via USB-VCP | set to /dev/serial0 if you use Pis UART
serial_int_tel=/dev/serial0
# The telemetry protocol used by FC (for telemetry module). Options [auto|ltm|mavlink]
tel_proto=auto
# Serial baud rate set on <serial_int_tel>
# Options are: 2400, 4800, 9600, 19200, 38400, 57600, 115200
baud_tel=9600

# Serial interface used by control module (MSP/MAVLink up/downlink)
# set to /dev/serial1 if you connect via USB-VCP | set to /dev/serial0 if you use Pis UART
serial_int_cont=/dev/serial1
# Serial baud rate set on <serial_int_cont>
# Options are: 2400, 4800, 9600, 19200, 38400, 57600, 115200
baud_control=115200
# Serial protocol used (by control module) to send RC commands (MSP only) and 
# to communicate with FC in general (settings, missions etc.)
# 1=MSPv1, 2=MSPv2 [iNAV], 3=MAVLink v1, 4=MAVLink v2, 5=MAVLink transparent pass through [recommended for MAVLink]
serial_prot=2
# Over the air long range packet size when serial_prot=5; should be a value of 2^n (n=1,2,3,...)
pass_through_packet_size=64

# MAVLink RC messages are not supported, but you can use SUMD RC instead. You will need an extra serial
# port for this. FTDI adapters can solve that issue. If SUMD is deactivated and serial_prot is MSP the RC
# messages will be sent via MSP (SET_RAW_RC)
# [Y|N] [!experimental!]
enable_sumd_rc=N
serial_int_sumd=/dev/ttyUSB0
